<?php
/**
 *
 * {{ EXTENSION.extension_display_name }}. An extension for the AN602 Forum Software package.
 *
 * @copyright (c) {{ "now"|date("Y") ~ (AUTHORS.0.author_name ? ', ' ~ AUTHORS.0.author_name) ~ (AUTHORS.0.author_homepage ? ', ' ~ AUTHORS.0.author_homepage) }}
 * @license GNU General Public License, version 2 (GPL-2.0)
 *
 */

namespace {{ EXTENSION.vendor_name }}\{{ EXTENSION.extension_name }}\event;

/**
 * @ignore
 */
use Symfony\Component\EventDispatcher\EventSubscriberInterface;

/**
 * {{ EXTENSION.extension_display_name }} Event listener.
 */
class main_listener implements EventSubscriberInterface
{
	public static function getSubscribedEvents()
	{
		return [
{% if COMPONENT.controller or COMPONENT.phplistener %}
			'core.user_setup'							=> 'load_language_on_setup',
{% if COMPONENT.controller %}
			'core.page_header'							=> 'add_page_header_link',
			'core.viewonline_overwrite_location'		=> 'viewonline_page',
{% endif %}
{% endif %}
{% if COMPONENT.phplistener %}
	'core.display_forums_modify_template_vars'	=> 'display_forums_modify_template_vars',
{% endif %}
{% if COMPONENT.permissions %}
			'core.permissions'	=> 'add_permissions',
{% endif %}
		];
	}
{% if COMPONENT.controller or COMPONENT.phplistener %}

	/* @var {{ LANGUAGE.class }} */
	protected ${{ LANGUAGE.object }};

{% if COMPONENT.controller %}
	/* @var \an602\controller\helper */
	protected $helper;

	/* @var \an602\template\template */
	protected $template;

	/** @var string phpEx */
	protected $php_ext;

{% endif %}
	/**
	 * Constructor
	 *
	 * @param {{ LANGUAGE.class ~ LANGUAGE.indent.class }}	${{ LANGUAGE.object ~ LANGUAGE.indent.object}}	{{ LANGUAGE.object|capitalize }} object
{% if COMPONENT.controller %}
	 * @param \an602\controller\helper	$helper		Controller helper object
	 * @param \an602\template\template	$template	Template object
	 * @param string                    $php_ext    phpEx
{% endif %}
	 */
	public function __construct({{ LANGUAGE.class }} ${{ LANGUAGE.object }}{% if COMPONENT.controller %}, \an602\controller\helper $helper, \an602\template\template $template, $php_ext{% endif %})
	{
		$this->{{ LANGUAGE.object ~ LANGUAGE.indent.object }} = ${{ LANGUAGE.object }};
{% if COMPONENT.controller %}
		$this->helper   = $helper;
		$this->template = $template;
		$this->php_ext  = $php_ext;
{% endif %}
	}

	/**
	 * Load common language files during user setup
	 *
	 * @param \an602\event\data	$event	Event object
	 */
	public function load_language_on_setup($event)
	{
		$lang_set_ext = $event['lang_set_ext'];
		$lang_set_ext[] = [
			'ext_name' => '{{ EXTENSION.vendor_name }}/{{ EXTENSION.extension_name }}',
			'lang_set' => 'common',
		];
		$event['lang_set_ext'] = $lang_set_ext;
	}
{% if COMPONENT.controller %}

	/**
	 * Add a link to the controller in the forum navbar
	 */
	public function add_page_header_link()
	{
		$this->template->assign_vars([
			'U_{{ EXTENSION.extension_name|upper }}_PAGE'	=> $this->helper->route('{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}_controller', ['name' => 'world']),
		]);
	}

	/**
	 * Show users viewing {{ EXTENSION.extension_display_name }} page on the Who Is Online page
	 *
	 * @param \an602\event\data	$event	Event object
	 */
	public function viewonline_page($event)
	{
		if ($event['on_page'][1] === 'app' && strrpos($event['row']['session_page'], 'app.' . $this->php_ext . '/demo') === 0)
		{
			$event['location'] = $this->{{ LANGUAGE.object }}->lang('VIEWING_{{ EXTENSION.vendor_name|upper }}_{{ EXTENSION.extension_name|upper }}');
			$event['location_url'] = $this->helper->route('{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}_controller', ['name' => 'world']);
		}
	}
{% endif %}
{% endif %}
{% if COMPONENT.phplistener %}

	/**
	 * A sample PHP event
	 * Modifies the names of the forums on index
	 *
	 * @param \an602\event\data	$event	Event object
	 */
	public function display_forums_modify_template_vars($event)
	{
		$forum_row = $event['forum_row'];
		$forum_row['FORUM_NAME'] .= $this->{{ LANGUAGE.object }}->lang('{{ EXTENSION.extension_name|upper }}_EVENT');
		$event['forum_row'] = $forum_row;
	}
{% endif %}
{% if COMPONENT.permissions %}

	/**
	 * Add permissions to the ACP -> Permissions settings page
	 * This is where permissions are assigned language keys and
	 * categories (where they will appear in the Permissions table):
	 * actions|content|forums|misc|permissions|pm|polls|post
	 * post_actions|posting|profile|settings|topic_actions|user_group
	 *
	 * Developers note: To control access to ACP, MCP and UCP modules, you
	 * must assign your permissions in your module_info.php file. For example,
	 * to allow only users with the a_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }} permission
	 * access to your ACP module, you would set this in your acp/main_info.php:
	 *    'auth' => 'ext_{{ EXTENSION.vendor_name }}/{{ EXTENSION.extension_name }} && acl_a_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}'
	 *
	 * @param \an602\event\data	$event	Event object
	 */
	public function add_permissions($event)
	{
		$permissions = $event['permissions'];

		$permissions['a_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}'] = ['lang' => 'ACL_A_NEW_{{ EXTENSION.vendor_name|upper }}_{{ EXTENSION.extension_name|upper }}', 'cat' => 'misc'];
		$permissions['m_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}'] = ['lang' => 'ACL_M_NEW_{{ EXTENSION.vendor_name|upper }}_{{ EXTENSION.extension_name|upper }}', 'cat' => 'post_actions'];
		$permissions['u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}'] = ['lang' => 'ACL_U_NEW_{{ EXTENSION.vendor_name|upper }}_{{ EXTENSION.extension_name|upper }}', 'cat' => 'post'];

		$event['permissions'] = $permissions;
	}
{% endif %}
}
