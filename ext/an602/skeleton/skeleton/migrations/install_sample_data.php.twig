<?php
/**
 *
 * {{ EXTENSION.extension_display_name }}. An extension for the AN602 Forum Software package.
 *
 * @copyright (c) {{ "now"|date("Y") ~ (AUTHORS.0.author_name ? ', ' ~ AUTHORS.0.author_name) ~ (AUTHORS.0.author_homepage ? ', ' ~ AUTHORS.0.author_homepage) }}
 * @license GNU General Public License, version 2 (GPL-2.0)
 *
 */

namespace {{ EXTENSION.vendor_name }}\{{ EXTENSION.extension_name }}\migrations;

class install_sample_data extends \an602\db\migration\migration
{
{% if COMPONENT.migration %}
	public function effectively_installed()
	{
		return $this->config->offsetExists('{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}_sample_int');
	}

{% endif %}
	public static function depends_on()
	{
		return ['\an602\db\migration\data\{% if skeleton_version_compare(REQUIREMENTS.an602_version_min, "3.2", "<") %}v31x\v314{% else %}v320\v320{% endif %}'];
	}

	/**
	 * Add, update or delete data stored in the database during extension installation.
	 *
	 * https://area51.an602.com/docs/dev/3.2.x/migrations/data_changes.html
{% if COMPONENT.migration %}
	 *  config.add: Add config data.
	 *  config.update: Update config data.
	 *  config.remove: Remove config.
	 *  config_text.add: Add config_text data.
	 *  config_text.update: Update config_text data.
	 *  config_text.remove: Remove config_text.
	 *  module.add: Add a new CP module.
	 *  module.remove: Remove a CP module.
{% endif %}
	 *  permission.add: Add a new permission.
	 *  permission.remove: Remove a permission.
	 *  permission.role_add: Add a new permission role.
	 *  permission.role_update: Update a permission role.
	 *  permission.role_remove: Remove a permission role.
	 *  permission.permission_set: Set a permission to Yes or Never.
	 *  permission.permission_unset: Set a permission to No.
{% if COMPONENT.migration %}
	 *  custom: Run a callable function to perform more complex operations.
{% endif %}
	 *
	 * @return array Array of data update instructions
	 */
	public function update_data()
	{
		return [
{% if COMPONENT.migration %}
			// Add new config table settings
			['config.add', ['{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}_sample_int', 0]],
			['config.add', ['{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}_sample_str', '']],

			// Add a new config_text table setting
			['config_text.add', ['{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}_sample', '']],

{% endif %}
			// Add new permissions
			['permission.add', ['a_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}']], // New admin permission
			['permission.add', ['m_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}']], // New moderator permission
			['permission.add', ['u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}']], // New user permission

			// ['permission.add', ['a_copy', true, 'a_existing']], // New admin permission a_copy, copies permission settings from a_existing

			// Set our new permissions
			['permission.permission_set', ['ROLE_ADMIN_FULL', 'a_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}']], // Give ROLE_ADMIN_FULL a_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }} permission
			['permission.permission_set', ['ROLE_MOD_FULL', 'm_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}']], // Give ROLE_MOD_FULL m_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }} permission
			['permission.permission_set', ['ROLE_USER_FULL', 'u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}']], // Give ROLE_USER_FULL u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }} permission
			['permission.permission_set', ['ROLE_USER_STANDARD', 'u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}']], // Give ROLE_USER_STANDARD u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }} permission
			['permission.permission_set', ['REGISTERED', 'u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}', 'group']], // Give REGISTERED group u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }} permission
			['permission.permission_set', ['REGISTERED_COPPA', 'u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }}', 'group', false]], // Set u_new_{{ EXTENSION.vendor_name }}_{{ EXTENSION.extension_name }} to never for REGISTERED_COPPA

			// Add new permission roles
			['permission.role_add', ['{{ EXTENSION.extension_name }} admin role', 'a_', 'a new role for admins']], // New role "{{ EXTENSION.extension_name }} admin role"
			['permission.role_add', ['{{ EXTENSION.extension_name }} moderator role', 'm_', 'a new role for moderators']], // New role "{{ EXTENSION.extension_name }} moderator role"
			['permission.role_add', ['{{ EXTENSION.extension_name }} user role', 'u_', 'a new role for users']], // New role "{{ EXTENSION.extension_name }} user role"
{% if COMPONENT.migration %}

			// Call a custom callable function to perform more complex operations.
			['custom', [[$this, 'sample_callable_install']]],
{% endif %}
		];
	}
{% if COMPONENT.migration %}

	/**
	 * Add, update or delete data stored in the database during extension un-installation (purge step).
	 *
	 * IMPORTANT: Under normal circumstances, the changes performed in update_data will
	 * automatically be reverted during un-installation. This revert_data method is optional
	 * and only needs to be used to perform custom un-installation changes, such as to revert
	 * changes made by custom functions called in update_data.
	 *
	 * https://area51.an602.com/docs/dev/3.2.x/migrations/data_changes.html
	 *  config.add: Add config data.
	 *  config.update: Update config data.
	 *  config.remove: Remove config.
	 *  config_text.add: Add config_text data.
	 *  config_text.update: Update config_text data.
	 *  config_text.remove: Remove config_text.
	 *  module.add: Add a new CP module.
	 *  module.remove: Remove a CP module.
	 *  permission.add: Add a new permission.
	 *  permission.remove: Remove a permission.
	 *  permission.role_add: Add a new permission role.
	 *  permission.role_update: Update a permission role.
	 *  permission.role_remove: Remove a permission role.
	 *  permission.permission_set: Set a permission to Yes or Never.
	 *  permission.permission_unset: Set a permission to No.
	 *  custom: Run a callable function to perform more complex operations.
	 *
	 * @return array Array of data update instructions
	 */
	public function revert_data()
	{
		return [
			['custom', [[$this, 'sample_callable_uninstall']]],
		];
	}

	/**
	 * A custom function for making more complex database changes
	 * during extension installation. Must be declared as public.
	 */
	public function sample_callable_install()
	{
		// Run some SQL queries on the database
	}

	/**
	 * A custom function for making more complex database changes
	 * during extension un-installation. Must be declared as public.
	 */
	public function sample_callable_uninstall()
	{
		// Run some SQL queries on the database
	}
{% endif %}
}
